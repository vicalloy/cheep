[tool.poetry]
name = "cheep"
version = "0.1.0"
description = ""
authors = ["vicalloy <zbirder@gmail.com>"]
readme = "README.md"

[[tool.poetry.source]]
name = "bfsu"
url = "https://mirrors.bfsu.edu.cn/pypi/web/simple/"
priority = "primary"


[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
miservice = "^2.0.1"
python-dotenv = "^1.0.0"
env = "^0.1.0"


[tool.poetry.group.dev.dependencies]
nuitka = "^1.7.9"
pre-commit = "^2.17.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
target-version = ['py310']
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
fix = true
select = [
#    "A",  # flake8-builtins
#    "ANN",  # flake8-annotations
#    "ARG",  # flake8-unused-arguments
    "B",  # flake8-bugbear
#    "BLE",  # flake8-blind-except
    "C",  # flake8-comprehensions
#    "D",  # pydocstyle
    "E",  # pycodestyle errors
#    "ERA",  # eradicate
    "F",  # pyflakes
#    "FBT",  # flake8-boolean-trap
    "I",  # isort
    "ICN",  # flake8-import-conventions
    "N",  # pep8-naming
#    "PGH",  # pygrep-hooks
    "PLC", "PLE", "PLR", "PLW",  # Pylint
    "Q",  # flake8-quotes
    "RET",  # flake8-return
#    "RUF",  # Ruff-specific rules
#    "S",  # flake8-bandit
#    "T",  # flake8-debugger
#    "TID",  # flake8-tidy-imports
    "UP", # pyupgrade
    "W",  # pycodestyle warnings
]
ignore = [
    "C901",  # too complex
    "B905",  # `zip()` without an explicit `strict=` parameter
    "RET504",  # Unnecessary variable assignment before `return` statement
    "UP022",  # Sending stdout and stderr to pipe is deprecated, use `capture_output`
    "PLR2004",  # Magic value used in comparison, consider replacing 50 with a constant variable
]

[tool.ruff.isort]
known-first-party = ["cheep"]

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.per-file-ignores]
"tests/*.py" = ["ALL"]

[tool.mypy]
files = ["cheep", "tests"]
